request_id,file_name,initial_status,final_status,initial_response_time,job_id,job_result,request_successful,processing_completed,result_valid
1,1.pdf,200,200,0.0318446159362793,3d82f1e1-bb6c-4008-8a2f-5b5eb949e94a,"{'id': '3d82f1e1-bb6c-4008-8a2f-5b5eb949e94a', 'filename': '1.pdf', 'status': 'completed', 'result_path': 'results/3d82f1e1-bb6c-4008-8a2f-5b5eb949e94a/result.json', 'error': None, 'created_at': '2025-04-14T18:09:38.139782', 'queue_position': None, 'result_data': {'id': '554153c382b55aaa83e228da9e2f74fdc77e6eee', 'text': 'CS6750 Team Project Check-In 4: Final Prototype and Evaluation Plan\n\n1 PROJECT BACKGROUND\n\nThe goal of our team is to design a wechat mini program interface based on geographical location, which can help tourists quickly obtain cultural information and promote the combination of culture and tourism by automatically searching and displaying the historical background and ancient poems of specific places. After preliminary research, design and prototype iteration, we have now completed the final prototype design and are ready to start the final evaluation.\n\n2 FINAL PROTOTYPE DESIGN:\n\nBased on our previous feedback and modifications, the final prototype design was optimized as follows:\n\nSimple home interface: The home interface presents a clear navigation bar with location detection, a search box, and user account information.\n\nHistorical information display: When the user arrives at the scenic spot, the location detection will automatically push the historical information of the scenic spot and the related ancient poetry, the content layout is clear, the text is concise, and the image and text description are equipped.\n\nVoice tour function: Provides voice explanation function, users can choose whether to enable, to provide a more immersive experience.\n\nInteractive map interface: Combined with the interactive map, users can click on each scenic spot to obtain detailed information, and there will be dynamic annotations on the map to show nearby historical and cultural points.\n\nUser feedback system: A user feedback function has been added to the mini program, allowing visitors to provide comments and comments on historical information, interface design and overall experience.', 'source': 'olmocr', 'added': '2025-04-14', 'created': '2025-04-14', 'metadata': {'Source-File': 'uploads/3d82f1e1-bb6c-4008-8a2f-5b5eb949e94a_1.pdf', 'olmocr-version': '0.1.60', 'pdf-total-pages': 1, 'total-input-tokens': 3502, 'total-output-tokens': 343, 'total-fallback-pages': 0}, 'attributes': {'pdf_page_numbers': [[0, 1698, 1]]}}, 'result_valid': True, 'status_history': [{'timestamp': 1744625378.1570315, 'elapsed': 0.015024185180664062, 'status': 'processing', 'queue_position': None}, {'timestamp': 1744625383.1653585, 'elapsed': 5.023351192474365, 'status': 'processing', 'queue_position': None}, {'timestamp': 1744625388.1721306, 'elapsed': 10.030123233795166, 'status': 'processing', 'queue_position': None}, {'timestamp': 1744625393.1771405, 'elapsed': 15.035133123397827, 'status': 'completed', 'queue_position': None}], 'total_processing_time': 15.035134077072144}",True,True,True
2,2.png,200,200,0.030613422393798828,ca988b7e-8c44-4220-b4aa-acc14d32d817,"{'id': 'ca988b7e-8c44-4220-b4aa-acc14d32d817', 'filename': '2.png', 'status': 'completed', 'result_path': 'results/ca988b7e-8c44-4220-b4aa-acc14d32d817/result.json', 'error': None, 'created_at': '2025-04-14T18:09:38.128595', 'queue_position': None, 'result_data': {'id': '97041034285c433b6e7948cb5e959bdea74e44ed', 'text': 'Quiz 2 Answer Key\n\nECE 4112 / ECE 6612 / CS 4262 / CNS 6262\nSpring 2025\n\nTrue/False Questions\n\nGrading Rubric:\n- 2pts if correct\n\n1. With BGP, routes to a subnet are selected primarily based on economic/financial factors (e.g., cost), with other factors such as shorter AS paths or lower latencies being secondary factors.\n   a. True. Cost is the main factor for BGP routes.\n\n2. If two ASes have a peering relationship, they will route each other’s traffic for free, for certain routes as agreed upon when establishing the peering relationship.\n   a. True. This is exactly the definition of a peering relationship.\n\n3. Route Origin Validation (ROV) implemented on all routers would provide integrity over the entire AS-PATH for all routes in BGP advertisements/announcements.\n   a. False. ROV only provides integrity over the originating AS.\n\n4. TCP sequence numbers start at 0.\n   a. False. They are randomly chosen initial values to prevent easy prediction.\n\n5. TCP requires a 4-way handshake to establish a connection.\n   a. False. TCP requires a 3-way handshake (SYN, SYN+ACK, ACK).\n\n6. Let’s say Eve knows Alice has a TCP connection with Bob, and wants to inject data into the TCP stream. To do so, Eve would at least need to know the IP addresses, ports, and sequence numbers used in the TCP connection by Alice and Bob.\n   a. True. Then Eve can spoof a valid-looking TCP packet, with the right address and port to get to Alice/Bob’s TCP connection, and the right sequence numbers for them to accept the packet as part of the TCP stream.\n\n7. DNSSEC provides integrity, authenticity, and confidentiality.\n   a. False. DNSSEC doesn’t provide confidentiality.\n\n8. Without DNS bailiwick checking, the gatech.edu authoritative name server could do a DNS cache poisoning attack and set the cached A record for uga.edu at a recursive resolver.\n   a. True, this is the example we showed in class (except for mit.edu NS setting the facebook.com record).\n\n9. An attacker wishes to spoof a UDP response packet. To do so, the attacker only has to guess the UDP identification number correctly.\n   a. False. UDP does not have an ID number.\n\n10. The defense against the Kaminsky Blind Spoofing DNS attack is to randomize both the source and destination ports used for DNS requests, in addition to the DNS ID value.', 'source': 'olmocr', 'added': '2025-04-14', 'created': '2025-04-14', 'metadata': {'Source-File': 'uploads/ca988b7e-8c44-4220-b4aa-acc14d32d817_2.png', 'olmocr-version': '0.1.60', 'pdf-total-pages': 1, 'total-input-tokens': 1180, 'total-output-tokens': 612, 'total-fallback-pages': 0}, 'attributes': {'pdf_page_numbers': [[0, 2306, 1]]}}, 'result_valid': True, 'status_history': [{'timestamp': 1744625378.156891, 'elapsed': 0.015606403350830078, 'status': 'processing', 'queue_position': None}, {'timestamp': 1744625383.165096, 'elapsed': 5.023811340332031, 'status': 'processing', 'queue_position': None}, {'timestamp': 1744625388.17184, 'elapsed': 10.030555248260498, 'status': 'processing', 'queue_position': None}, {'timestamp': 1744625393.1766143, 'elapsed': 15.035329580307007, 'status': 'processing', 'queue_position': None}, {'timestamp': 1744625398.181519, 'elapsed': 20.040234327316284, 'status': 'completed', 'queue_position': None}], 'total_processing_time': 20.04023551940918}",True,True,True
3,3.png,200,200,0.030293703079223633,4574be14-13b7-4aa4-b986-a53cc61f5c27,"{'id': '4574be14-13b7-4aa4-b986-a53cc61f5c27', 'filename': '3.png', 'status': 'completed', 'result_path': 'results/4574be14-13b7-4aa4-b986-a53cc61f5c27/result.json', 'error': None, 'created_at': '2025-04-14T18:09:38.133759', 'queue_position': None, 'result_data': {'id': 'eab1217b90d97b0993099969c3200eb2d9a73550', 'text': '3. Your browser connects successfully to google.com over HTTPS. Given this successful connection, which of the following individual attacks/attackers could not have affected the security of your connection with google.com? Assume that google.com’s private key has not been compromised. (Select all that apply)\n   a. Hijacking the BGP routes to google.com’s IP address\n   b. A compromised certificate authority (CA) mis-issuing a certificate for google.com to a malicious entity\n   c. Spoofing DNS responses for google.com’s IP address\n   d. A malicious WiFi router/access point\n\nIf you connected to google.com successfully over HTTPS, that means you have successfully validated google.com’s TLS certificate (and google.com’s server demonstrates ownership of the associated private key). Thus, you have authenticated that you are connected to google.com’s server, so any attacks that attempt to redirect you to an attacker’s server or MITM your TLS connection would fail (answers a, c, and d). However, if a compromised CA issues a wrong cert for google.com, your trust assumptions are no longer valid and it’s possible you’re actually connected with the attacker server using the mis-issued google.com cert.\n\n4. Which properties does TLS provide for end-to-end communication? (Select all that apply)\n   a. Confidentiality\n   b. Integrity\n   c. Availability\n   d. Authentication\n   e. None of the above\n\nTLS provides confidentiality through encryption, integrity through MACs, and authentication through certs/public keys/signatures. It does not protect against availability attacks (like DoS).\n\nNOTE: I saw a few responses that indicated not D (authentication), b/c TLS as described in class provides authentication of the server but not the client. Technically TLS can allow for client certificates, so bidirectional authentication (although not often used), but we didn’t discuss this in class. So I’ve decided to allow A+B for full credit too.\n\n5. With BGP, say that AS1 is a paying customer of AS2. Which of the following would be true of their BGP advertisements, based on financial incentives? (Select all that apply)\n   a. AS2 will advertise to AS1 that it can route to other neighboring ASes\n   b. AS2 will advertise to other neighboring ASes that it can route to AS1\n   c. AS1 will advertise to all neighboring ASes that it can route to AS2\n   d. AS1 will advertise to AS2 that it can route to other neighboring ASes', 'source': 'olmocr', 'added': '2025-04-14', 'created': '2025-04-14', 'metadata': {'Source-File': 'uploads/4574be14-13b7-4aa4-b986-a53cc61f5c27_3.png', 'olmocr-version': '0.1.60', 'pdf-total-pages': 1, 'total-input-tokens': 1143, 'total-output-tokens': 561, 'total-fallback-pages': 0}, 'attributes': {'pdf_page_numbers': [[0, 2425, 1]]}}, 'result_valid': True, 'status_history': [{'timestamp': 1744625378.1566124, 'elapsed': 0.01546621322631836, 'status': 'processing', 'queue_position': None}, {'timestamp': 1744625383.1647048, 'elapsed': 5.023558616638184, 'status': 'processing', 'queue_position': None}, {'timestamp': 1744625388.17141, 'elapsed': 10.030263900756836, 'status': 'processing', 'queue_position': None}, {'timestamp': 1744625393.1761997, 'elapsed': 15.035053491592407, 'status': 'processing', 'queue_position': None}, {'timestamp': 1744625398.180435, 'elapsed': 20.039288759231567, 'status': 'completed', 'queue_position': None}], 'total_processing_time': 20.03929114341736}",True,True,True
4,4.png,200,200,0.02811717987060547,3812e970-f950-4728-8544-9f81ea96df85,"{'id': '3812e970-f950-4728-8544-9f81ea96df85', 'filename': '4.png', 'status': 'completed', 'result_path': 'results/3812e970-f950-4728-8544-9f81ea96df85/result.json', 'error': None, 'created_at': '2025-04-14T18:09:38.136890', 'queue_position': None, 'result_data': {'id': 'e93feae7aaef09350495ad5d1d7ddff24871aa31', 'text': ""Since AS1 is a paying customer of AS2, AS1 needs to pay AS2 for any traffic it sends and receives through AS2. So AS2 will be incentivized to advertise routes that send traffic to AS1 (b) and routes that take traffic from AS1 (a). AS1 will avoid trying to route traffic to AS2 and avoid taking traffic from AS2 (so not options c and d, respectively).\n\n6. Which of the following are reasons that BGPSEC may not be widely adopted yet? (Select all that apply)\n   a. BGP operators don't understand how BGPSEC works\n   b. Computational overhead due to the cryptographic operations\n   c. Limited benefits with only partial deployment\n   d. ROV is a strictly more secure solution\n\nB and C were discussed in class. A is generally not true (and not discussed in class). D is also not true as ROV covers a different issue compared to BGPSEC (route origin vs whole AS Path validation).\n\n7. Which of the following domains are within the bailiwick of the gatech.edu name server? (Select all that apply)\n   a. amazon.gatech.edu\n   b. www.cc.gatech.edu\n   c. georgiatech.edu\n   d. gatech.com\n\nOptions a and b are subdomains of gatech.edu, so within its name server's bailiwick.\n\n8. Which of the following statements are true about DNSSEC? (Select all that apply)\n   a. Key-signing keys (KSKs) are used to generate all DNSSEC signatures\n   b. Given the same DNS query, DNSSEC responses are bigger than regular DNS responses\n   c. DNSSEC records cannot be cached\n   d. With DNSSEC, every name server (whether the root, TLD, or authoritative) will include a signature (an RRSIG record) for every DNS record it provides to a DNS client\n\nB is true due to the key/signature data. A is false because KSKs only sign other key records. ZSKs sign other DNS records. C is false as DNSSEC records can be cached, a core DNSSEC property.\nFinally, D is false because only the authoritative NS returns a signature for the final answer record. Intermediate NSes do not provide RRSIGs on DNS records, such as those telling the client what NS to use next (e.g., root tells the client to go to the .com NS, that record is not accompanied with another RRSIG record, as discussed in class; only the DS record has an accompanying RRSIG)."", 'source': 'olmocr', 'added': '2025-04-14', 'created': '2025-04-14', 'metadata': {'Source-File': 'uploads/3812e970-f950-4728-8544-9f81ea96df85_4.png', 'olmocr-version': '0.1.60', 'pdf-total-pages': 1, 'total-input-tokens': 1180, 'total-output-tokens': 585, 'total-fallback-pages': 0}, 'attributes': {'pdf_page_numbers': [[0, 2199, 1]]}}, 'result_valid': True, 'status_history': [{'timestamp': 1744625378.1564534, 'elapsed': 0.01570868492126465, 'status': 'processing', 'queue_position': None}, {'timestamp': 1744625383.1617708, 'elapsed': 5.021026134490967, 'status': 'processing', 'queue_position': None}, {'timestamp': 1744625388.1682427, 'elapsed': 10.027498006820679, 'status': 'processing', 'queue_position': None}, {'timestamp': 1744625393.1734035, 'elapsed': 15.032658815383911, 'status': 'processing', 'queue_position': None}, {'timestamp': 1744625398.1783931, 'elapsed': 20.03764843940735, 'status': 'completed', 'queue_position': None}], 'total_processing_time': 20.03765082359314}",True,True,True
5,5.png,200,200,0.03903532028198242,dfe596c6-755b-4f0a-b2a6-d0c7aad5a0e6,"{'id': 'dfe596c6-755b-4f0a-b2a6-d0c7aad5a0e6', 'filename': '5.png', 'status': 'completed', 'result_path': 'results/dfe596c6-755b-4f0a-b2a6-d0c7aad5a0e6/result.json', 'error': None, 'created_at': '2025-04-14T18:09:38.150962', 'queue_position': None, 'result_data': {'id': '8f305807c356aab3ccc286e526657a686164221f', 'text': '(However since D was a common selection, I believe there was some ambiguity with this option, so I will give 3/4pts if B+D are selected.)\n\n9. Which of the following methods allow TLS clients to detect that a certificate has been explicitly revoked by a certificate authority? (Select all that apply)\n   a. Certificate expirations\n   b. Certificate Revocation Lists (CRLs)\n   c. Online Certificate Status Protocol (OCSP)\n   d. DNS Bailiwick Checking\n\nOCSP and CRLs are CA mechanisms for revocation. Certificate expirations aren’t revocations, and DNS bailiwick checking doesn’t have to do with TLS at all.\n\n10. Let’s say you are on the Georgia Tech WiFi network, and your DNS client is using DNS-over-TLS (DOT) with the public Google DNS recursive resolver (8.8.8.8). Which of the following entities can observe the domains that your DNS client is querying?\n   a. Google’s DNS recursive resolver (8.8.8.8)\n   b. DNS authoritative name servers\n   c. Georgia Tech’s WiFi router\n   d. Georgia Tech’s local DNS recursive resolver\n\nNOTE: We forgot to put “Select all that apply” so if you select one of the correct values, we will give full credit.\n\nThe DOT connection, since it uses TLS, means that entities on the path between the client and Google’s DNS recursive resolver cannot see the DNS traffic (so that eliminates c). The local DNS recursive resolver wouldn’t receive the DNS queries to start with, so not d. But the Google recursive resolver naturally sees the requests (as it needs to resolve it) as does the authoritative name servers, so a and b are true.\n\nFill-in-the-Blank Questions\n\n1. A browser just sent a web server a TCP data packet with a sequence number of 1500, an acknowledgement number of 2000, and a data payload of 30 bytes. The server responds to that packet with a TCP data packet containing a 10-byte payload. What are the sequence and acknowledgement numbers in the server’s TCP packet? (Assume no packet loss/drops in this connection.)\n   Answer:\n   Seq #: 2000\n   Ack #: 1530', 'source': 'olmocr', 'added': '2025-04-14', 'created': '2025-04-14', 'metadata': {'Source-File': 'uploads/dfe596c6-755b-4f0a-b2a6-d0c7aad5a0e6_5.png', 'olmocr-version': '0.1.60', 'pdf-total-pages': 1, 'total-input-tokens': 1180, 'total-output-tokens': 530, 'total-fallback-pages': 0}, 'attributes': {'pdf_page_numbers': [[0, 2002, 1]]}}, 'result_valid': True, 'status_history': [{'timestamp': 1744625379.6386316, 'elapsed': 1.4868426322937012, 'status': 'processing', 'queue_position': None}, {'timestamp': 1744625384.642453, 'elapsed': 6.490664005279541, 'status': 'processing', 'queue_position': None}, {'timestamp': 1744625389.6452851, 'elapsed': 11.493496179580688, 'status': 'processing', 'queue_position': None}, {'timestamp': 1744625394.6470828, 'elapsed': 16.495293855667114, 'status': 'completed', 'queue_position': None}], 'total_processing_time': 16.495295524597168}",True,True,True
6,6.png,200,200,0.028506994247436523,5f52c947-3bc7-4ca1-afdc-6acbac690227,"{'id': '5f52c947-3bc7-4ca1-afdc-6acbac690227', 'filename': '6.png', 'status': 'completed', 'result_path': 'results/5f52c947-3bc7-4ca1-afdc-6acbac690227/result.json', 'error': None, 'created_at': '2025-04-14T18:09:38.130543', 'queue_position': None, 'result_data': {'id': '519ff076bececac86912ba1ecee6654e5c30e53b', 'text': 'The server response’s seq # will be the ack # from the client request (since the ack # indicates the next seq # that the client expects to receive from the server), so seq # = 2000.\n\nThe server response’s ack # will be the index of the next expected data byte from the client. Recall that the seq # itself is indicating the index of the first byte of the packet. So here, the client request’s seq # is 1500, indicating the first byte of the client’s packet is at index 1500. The data payload is 30 bytes, so the last payload byte is at index 1529. That leaves the server response’s ack # as 1530, as the index of the next expected data byte from the client.\n\nGrading Rubric:\n- 3pts each for correct answer\n- 2 pts if off by just 1 for an answer\n- 1 pts each for incorrect answer\n- 0 pts for no answer\n\nLong(er) Answer Questions\n7 points each\n\n1. A BGP router supports BGPSEC, and receives a route to subnet X with AS-PATH A->B->C. That route has BGPSEC signatures for the A->B and B->C hops in the route that verify successfully (i.e., the full AS-PATH is verified with BGPSEC). Can the router be confident that this is a legitimate route to subnet X? Answer yes or no, and explain why in detail.\n\nNo. BGPSEC by itself just validates that the path is legitimately composed of announced routes (e.g., A truly did hear from B that there’s a route to X through C, and likewise B did hear from C that it has a route to X). However, it does not validate the route origins, that C really can announce routes to X. This is the purpose of ROV/RPKI.\n\nGrading Rubric: Key aspects are 1) mentioning the need for origin validation, and 2) BGPSEC doesn’t provide origin validation (it provides only path validation, although this doesn’t need to be explicitly mentioned).\n\n- 2 pts for effort (wrong answer/explanation)\n- 3 pts for a correct answer with a missing or incorrect explanation.\n- 5 pts for a correct answer with a generic/incomplete explanation (e.g., saying BGPSEC doesn’t protect such situations without explaining why).\n- 6 pts for a correct answer and specifying one of the two key aspects\n- 7 pts for a complete answer specifying both key aspects\n\nAlternative Answer: No, BGPSEC by itself only guarantees path validation, but it cannot prevent route leaks. A route leak occurs when an intermediate AS incorrectly propagates a route it received from one of its neighbor ASes to another AS when it shouldn’t. This violates routing policies or business', 'source': 'olmocr', 'added': '2025-04-14', 'created': '2025-04-14', 'metadata': {'Source-File': 'uploads/5f52c947-3bc7-4ca1-afdc-6acbac690227_6.png', 'olmocr-version': '0.1.60', 'pdf-total-pages': 1, 'total-input-tokens': 1180, 'total-output-tokens': 642, 'total-fallback-pages': 0}, 'attributes': {'pdf_page_numbers': [[0, 2452, 1]]}}, 'result_valid': True, 'status_history': [{'timestamp': 1744625378.1568367, 'elapsed': 0.015425920486450195, 'status': 'processing', 'queue_position': None}, {'timestamp': 1744625383.165019, 'elapsed': 5.023608207702637, 'status': 'processing', 'queue_position': None}, {'timestamp': 1744625388.1717534, 'elapsed': 10.03034257888794, 'status': 'processing', 'queue_position': None}, {'timestamp': 1744625393.176524, 'elapsed': 15.035113096237183, 'status': 'processing', 'queue_position': None}, {'timestamp': 1744625398.1810758, 'elapsed': 20.03966498374939, 'status': 'completed', 'queue_position': None}], 'total_processing_time': 20.039666175842285}",True,True,True
7,7.png,200,200,0.028765201568603516,d25b1421-f6ab-4034-b73e-de64034d4faf,"{'id': 'd25b1421-f6ab-4034-b73e-de64034d4faf', 'filename': '7.png', 'status': 'completed', 'result_path': 'results/d25b1421-f6ab-4034-b73e-de64034d4faf/result.json', 'error': None, 'created_at': '2025-04-14T18:09:38.135335', 'queue_position': None, 'result_data': {'id': 'aa75149152d0faff458cd85cda20b82c63ef8757', 'text': 'agreements, making the advertised route illegal. It could be possible this route is not legitimate in the sense that it was a leaked route. Here, simply saying route leak is 5pts (generic/incomplete), and full credit requires explaining the route leaks scenario leading to this route not being legitimate.\n\n2. You and Eve are in the same coffee shop, both on their open WiFi network (within WiFi range of each other). She can also see your screen, and notices that you just opened https://youtube.com in your browser. Eve would like to prevent you from watching Youtube videos (probably because it’s distracting to her), and wishes that she could somehow terminate your Youtube HTTPS connection. Can Eve disrupt your browser’s connection with Youtube? If yes, explain in detail what Eve would do for her attack. If not, explain how the Youtube HTTPS connection prevents Eve from doing so.\n\nYes, Eve can try to close your TCP connection by spoofing a TCP RST packet. Eve can easily do so correctly since she can sniff your TCP traffic (being within WiFi range on an open network), so she can see your TCP header parameters, including the addresses, ports, and sequence numbers. Despite the connection being over HTTPS (so TLS), TLS doesn’t protect against TCP-level attacks like RST injections.\n\nGrading Rubric: Key aspects are discussing that 1) Eve can do a TCP RST injection attack (or a FIN + subsequent ACK attack), or describe such an attack, and 2) Eve can sniff your TCP traffic so easily observe your header information (or mention seeing the sequence numbers and ports).\n- 2 pts for effort (wrong answer but provided an explanation)\n- 3 pts for correct answer but missing/incorrect explanation\n- 5 pts for correct answer with generic/incomplete explanation (e.g., briefly saying Eve can reset the TCP connection without explaining how)\n- 6 pts for correct answer with partially correct explanation, mentioning one of the two key aspects\n- 7 pts for correct answer with a fully correct explanation with both aspects\n\n3. Your browser connects to https://gatech.edu using TLS 1.2, using the Diffie-Hellman key exchange. Mallory is a MITM attacker who can observe and potentially tamper with your TLS 1.2 traffic (including the handshake). Let’s say that Mallory changes the Diffie-Hellman key exchange message sent by the browser to gatech.edu (so not gatech.edu’s half of the DH key exchange).\n\nWill your browser and gatech.edu successfully set up a TLS connection? If yes, will Mallory be able to observe the plaintext web traffic? Explain why or why not. If not, why won’t the TLS connection be set up successfully?\n\nNo, the TLS connection won’t be set up correctly. If Mallory changes the browser’s DH key exchange message, your browser and the server will compute different symmetric keys. Then, during the last phase of the TLS 1.2 handshake where both sides exchange', 'source': 'olmocr', 'added': '2025-04-14', 'created': '2025-04-14', 'metadata': {'Source-File': 'uploads/d25b1421-f6ab-4034-b73e-de64034d4faf_7.png', 'olmocr-version': '0.1.60', 'pdf-total-pages': 1, 'total-input-tokens': 1180, 'total-output-tokens': 657, 'total-fallback-pages': 0}, 'attributes': {'pdf_page_numbers': [[0, 2879, 1]]}}, 'result_valid': True, 'status_history': [{'timestamp': 1744625378.1569812, 'elapsed': 0.015157699584960938, 'status': 'processing', 'queue_position': None}, {'timestamp': 1744625383.1652367, 'elapsed': 5.023413181304932, 'status': 'processing', 'queue_position': None}, {'timestamp': 1744625388.1720028, 'elapsed': 10.030179262161255, 'status': 'processing', 'queue_position': None}, {'timestamp': 1744625393.1769884, 'elapsed': 15.035164833068848, 'status': 'processing', 'queue_position': None}, {'timestamp': 1744625398.1813033, 'elapsed': 20.039479732513428, 'status': 'completed', 'queue_position': None}], 'total_processing_time': 20.039480686187744}",True,True,True
8,8.png,200,200,0.02831435203552246,1dfa9851-6770-483c-9562-c10a37a840c0,"{'id': '1dfa9851-6770-483c-9562-c10a37a840c0', 'filename': '8.png', 'status': 'completed', 'result_path': 'results/1dfa9851-6770-483c-9562-c10a37a840c0/result.json', 'error': None, 'created_at': '2025-04-14T18:09:38.138534', 'queue_position': None, 'result_data': {'id': '8241990341702df2d3c7705a322106ccc2f21d04', 'text': 'MACs of the TLS handshake dialog, the MACs won’t validate correctly because both sides will have generated different MAC integrity keys and the dialogs will also be different. Note, the browser’s DH key exchange does not have a signature (only the server does, since the server’s public key is known from the TLS certificate). So answers mentioning signature detection, or earlier detection than the dialog check, won’t receive full credit.\n\nGrading Rubric: Key aspect is discussing the MAC dialog checks failing.\n- 2 pts for effort (wrong answer but provided an explanation)\n- 3 pts for correct answer but missing/incorrect explanation (including mentioning a signature verification of the browser’s DH key exchange message).\n- 5 pts for correct answer with generic/incomplete explanation (e.g., briefly saying TLS protects against this without discussing specifically why)\n- 6 pts for correct answer with partially correct explanation (e.g., detailed discussion without specifically mentioning the MAC dialog checks)\n- 7 pts for correct answer with a fully correct explanation\n\n4. Let’s say that the root and .edu name servers support DNSSEC, as does the gatech.edu authoritative name server. So normally, all DNS records from the gatech.edu authoritative name server should be fully verifiable with DNSSEC.\n\nOne day, Mallory is able to compromise the .edu name server, including the cryptographic keys that the .edu name server uses for DNSSEC.\n\nAfterwards, your DNS client iteratively queries for ece.gatech.edu using DNSSEC, and gets a final answer that fully validates in DNSSEC. Can you trust that this final answer is correct? If yes, explain how DNSSEC ensures this final answer is correct. If not, explain in detail how Mallory can control the final answer while still fully passing DNSSEC validation.\n\nNo. Mallory, having compromised the .edu NS, can cause your client to go to a malicious authoritative NS, rather than the real gatech.edu authoritative NS. Mallory can still pass all DNSSEC checks because the now-compromised .edu NS can generate the right DS and RRSIG values for the malicious authoritative NS (e.g., the DS can have the hash of the malicious authoritative NS’s key, and Mallory can sign that using the compromised .edu NS private key). All the remaining DNS records (including DNSSEC records, such as keys and signatures) from the malicious authoritative NS are purely within Mallory’s control, and she can generate and sign the records under her control correctly (as .edu NS has already validated its key).\n\nIf someone explicitly assumed that by “.edu’s cryptographic keys” they meant only public keys within DNSSEC then we’ll accept as fully correct answers of yes, where the explanation is about how Mallory cannot create DNS records with valid RRSIGs w/o the private keys.', 'source': 'olmocr', 'added': '2025-04-14', 'created': '2025-04-14', 'metadata': {'Source-File': 'uploads/1dfa9851-6770-483c-9562-c10a37a840c0_8.png', 'olmocr-version': '0.1.60', 'pdf-total-pages': 1, 'total-input-tokens': 1180, 'total-output-tokens': 622, 'total-fallback-pages': 0}, 'attributes': {'pdf_page_numbers': [[0, 2808, 1]]}}, 'result_valid': True, 'status_history': [{'timestamp': 1744625378.156665, 'elapsed': 0.015132427215576172, 'status': 'processing', 'queue_position': None}, {'timestamp': 1744625383.164823, 'elapsed': 5.023290395736694, 'status': 'processing', 'queue_position': None}, {'timestamp': 1744625388.171531, 'elapsed': 10.029998302459717, 'status': 'processing', 'queue_position': None}, {'timestamp': 1744625393.1763184, 'elapsed': 15.034785747528076, 'status': 'processing', 'queue_position': None}, {'timestamp': 1744625398.1807115, 'elapsed': 20.0391788482666, 'status': 'completed', 'queue_position': None}], 'total_processing_time': 20.039180278778076}",True,True,True
9,9.jpg,200,200,0.03821301460266113,58000cac-3272-4146-b63d-a0813f77033b,"{'id': '58000cac-3272-4146-b63d-a0813f77033b', 'filename': '9.jpg', 'status': 'completed', 'result_path': 'results/58000cac-3272-4146-b63d-a0813f77033b/result.json', 'error': None, 'created_at': '2025-04-14T18:09:38.149337', 'queue_position': None, 'result_data': {'id': '18f1479ff04785d6ee417fb5dd2ded2b2d9350f9', 'text': 'a. False. The defense is randomizing the source port (in addition to the DNS ID #). The destination port needs to be known, since it’s the port used by the server (which needs to listen for DNS requests on a known specific port).\n\n11. Compared to TLS 1.2, TLS 1.3 reduces the number of round trips required for the TLS handshake.\n   a. True. That was the design advantage of TLS 1.3 over TLS 1.2.\n\n12. TLS uses asymmetric cryptography for key exchange and symmetric cryptography for the rest of the connection’s data transmission.\n   a. True. TLS first uses RSA/DH key exchange to select symmetric crypto keys, then uses those symmetric keys for everything else.\n\n13. TLS 1.2 and TLS 1.3 both support RSA and Diffie-Hellman key exchange.\n   a. False. TLS 1.3 removes RSA as a key exchange option, as it doesn’t offer perfect forward secrecy.\n\nMultiple Choice Questions\n\nGrading Rubric:\n- 4 pts if fully correct\n- 2 point if some choices are correct, but did not get all correct choices (or chose incorrect choices)\n- Only incorrect choices got 0 pts\n\n1. Let’s say a router wants to route to IP address 18.0.0.1, and has the following entries in its routing table (e.g., the routes it has previously learned and selected via BGP). Which route would be picked for 18.0.0.1?\n   a. Subnet = 18.0.0.0/8 ; AS-PATH = A,B ; Cost = 20\n   b. Subnet = 18.0.0.0/10 ; AS-PATH = A,C ; Cost = 20\n   c. Subnet = 18.0.0.0/18 ; AS-PATH = A,C,D ; Cost = 25\n   d. Subnet = 18.0.0.0/24 ; AS-PATH = A,C,E ; Cost = 25\n\nWith routing to a specific IP, we’ll use the longest prefix match. The routing table already has the “best” route to a specific subnet, so we find the most specific subnet to that IP.\n\n2. Which of the following are true about TLS? (Select all that apply)\n   a. SSL is the newest version of TLS\n   b. TLS is an application-layer protocol\n   c. TLS 1.2 has a 3-way handshake\n   d. TLS uses 4 symmetric cryptographic keys (2 for encryption, 2 for integrity)\n\nA is wrong as SSL is the old version of TLS, now deprecated. B is true as TLS is indeed application-layer as it sits above the network layer. C is wrong as TLS 1.2 has a 4-way handshake; TCP has a 3-way handshake. D is correct, as TLS generates one encryption and one integrity key for the client, and one encryption and one integrity key for the server (so 4 keys total).', 'source': 'olmocr', 'added': '2025-04-14', 'created': '2025-04-14', 'metadata': {'Source-File': 'uploads/58000cac-3272-4146-b63d-a0813f77033b_9.jpg', 'olmocr-version': '0.1.60', 'pdf-total-pages': 1, 'total-input-tokens': 1143, 'total-output-tokens': 708, 'total-fallback-pages': 0}, 'attributes': {'pdf_page_numbers': [[0, 2324, 1]]}}, 'result_valid': True, 'status_history': [{'timestamp': 1744625379.6385112, 'elapsed': 1.4869248867034912, 'status': 'processing', 'queue_position': None}, {'timestamp': 1744625384.6418715, 'elapsed': 6.490285158157349, 'status': 'processing', 'queue_position': None}, {'timestamp': 1744625389.6447566, 'elapsed': 11.493170261383057, 'status': 'processing', 'queue_position': None}, {'timestamp': 1744625394.646555, 'elapsed': 16.49496865272522, 'status': 'processing', 'queue_position': None}, {'timestamp': 1744625399.649593, 'elapsed': 21.49800682067871, 'status': 'completed', 'queue_position': None}], 'total_processing_time': 21.498008489608765}",True,True,True
10,10.png,200,200,0.028169870376586914,9be6a6ea-603d-45af-b9f2-4371e41686c9,"{'id': '9be6a6ea-603d-45af-b9f2-4371e41686c9', 'filename': '10.png', 'status': 'completed', 'result_path': 'results/9be6a6ea-603d-45af-b9f2-4371e41686c9/result.json', 'error': None, 'created_at': '2025-04-14T18:09:38.132033', 'queue_position': None, 'result_data': {'id': '0958065f0c8aa13c28976f2aad5eff648f3ecd49', 'text': '功能设计\n\n工作流程\n学生输入问题->ai结合知识库自动分析->初步规划学习路径->智能匹配老师同时初步推荐课程视频\n\n模块设计\n知识库答疑：视频推荐+教程知识增强\n语音模块：语音转文字+文字转语音\n图像模块：OCR图像文字识别+多模态大模型图像理解\n\n后台提示词管理模块：开发人员和教研人员可以使用提示词管理后台，不断优化提示词\n\nAPI设计\n具体模块API：\n- 知识对话api：提供api，传入用户对话，自动判断是否调用知识库，拆解关键词，返回ai生成回答\n- 语音api：提供api，实现TTS语音转文字，STT文字转语音功能\n- 图像api：提供api，实现对用户提问图像理解，高级用户可以使用多模态大模型进行理解\n- 后台管理api：通过api，修改提示词、工作流\n\n前端\n前端展示：\n- IOS\n- Android\n- 单片机开发板前端（待开发）\n\n2. 教学辅助系统', 'source': 'olmocr', 'added': '2025-04-14', 'created': '2025-04-14', 'metadata': {'Source-File': 'uploads/9be6a6ea-603d-45af-b9f2-4371e41686c9_10.png', 'olmocr-version': '0.1.60', 'pdf-total-pages': 1, 'total-input-tokens': 1254, 'total-output-tokens': 275, 'total-fallback-pages': 0}, 'attributes': {'pdf_page_numbers': [[0, 391, 1]]}}, 'result_valid': True, 'status_history': [{'timestamp': 1744625378.1569366, 'elapsed': 0.015279769897460938, 'status': 'processing', 'queue_position': None}, {'timestamp': 1744625383.1651666, 'elapsed': 5.023509740829468, 'status': 'processing', 'queue_position': None}, {'timestamp': 1744625388.1719246, 'elapsed': 10.030267715454102, 'status': 'processing', 'queue_position': None}, {'timestamp': 1744625393.176694, 'elapsed': 15.03503704071045, 'status': 'completed', 'queue_position': None}], 'total_processing_time': 15.035038948059082}",True,True,True
